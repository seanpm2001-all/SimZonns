//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.04.01 at 10:04:03 PM CEST 
//


package org.opentelecoms.gsm0348.api.model;

import java.util.Arrays;
import java.util.Objects;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.HexBinaryAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.opentelecoms.gsm0348.api.Util;


/**
 * <p>Java class for CardProfile complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CardProfile"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Name" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="TransportProtocol" type="{org.opentelecoms.gsm0348}TransportProtocol"/&gt;
 *         &lt;element name="KIC" type="{org.opentelecoms.gsm0348}KIC"/&gt;
 *         &lt;element name="KID" type="{org.opentelecoms.gsm0348}KID"/&gt;
 *         &lt;element name="SPI" type="{org.opentelecoms.gsm0348}SPI"/&gt;
 *         &lt;element name="TAR" type="{org.opentelecoms.gsm0348}TAR"/&gt;
 *         &lt;element name="SignatureAlgorithm" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *         &lt;element name="CipheringAlgorithm" type="{http://www.w3.org/2001/XMLSchema}string"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CardProfile", propOrder = {
    "name",
    "transportProtocol",
    "kic",
    "kid",
    "spi",
    "tar",
    "signatureAlgorithm",
    "cipheringAlgorithm"
})
public class CardProfile {

    @XmlElement(name = "Name", required = true)
    protected String name;
    @XmlElement(name = "TransportProtocol", required = true)
    @XmlSchemaType(name = "string")
    protected TransportProtocol transportProtocol;
    @XmlElement(name = "KIC", required = true)
    protected KIC kic;
    @XmlElement(name = "KID", required = true)
    protected KID kid;
    @XmlElement(name = "SPI", required = true)
    protected SPI spi;
    @XmlElement(name = "TAR", required = true, type = String.class)
    @XmlJavaTypeAdapter(HexBinaryAdapter.class)
    @XmlSchemaType(name = "hexBinary")
    protected byte[] tar;
    @XmlElement(name = "SignatureAlgorithm", required = true)
    protected String signatureAlgorithm;
    @XmlElement(name = "CipheringAlgorithm", required = true)
    protected String cipheringAlgorithm;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the transportProtocol property.
     * 
     * @return
     *     possible object is
     *     {@link TransportProtocol }
     *     
     */
    public TransportProtocol getTransportProtocol() {
        return transportProtocol;
    }

    /**
     * Sets the value of the transportProtocol property.
     * 
     * @param value
     *     allowed object is
     *     {@link TransportProtocol }
     *     
     */
    public void setTransportProtocol(TransportProtocol value) {
        this.transportProtocol = value;
    }

    /**
     * Gets the value of the kic property.
     * 
     * @return
     *     possible object is
     *     {@link KIC }
     *     
     */
    public KIC getKIC() {
        return kic;
    }

    /**
     * Sets the value of the kic property.
     * 
     * @param value
     *     allowed object is
     *     {@link KIC }
     *     
     */
    public void setKIC(KIC value) {
        this.kic = value;
    }

    /**
     * Gets the value of the kid property.
     * 
     * @return
     *     possible object is
     *     {@link KID }
     *     
     */
    public KID getKID() {
        return kid;
    }

    /**
     * Sets the value of the kid property.
     * 
     * @param value
     *     allowed object is
     *     {@link KID }
     *     
     */
    public void setKID(KID value) {
        this.kid = value;
    }

    /**
     * Gets the value of the spi property.
     * 
     * @return
     *     possible object is
     *     {@link SPI }
     *     
     */
    public SPI getSPI() {
        return spi;
    }

    /**
     * Sets the value of the spi property.
     * 
     * @param value
     *     allowed object is
     *     {@link SPI }
     *     
     */
    public void setSPI(SPI value) {
        this.spi = value;
    }

    /**
     * Gets the value of the tar property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public byte[] getTAR() {
        return tar;
    }

    /**
     * Sets the value of the tar property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTAR(byte[] value) {
        this.tar = value;
    }

    /**
     * Gets the value of the signatureAlgorithm property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSignatureAlgorithm() {
        return signatureAlgorithm;
    }

    /**
     * Sets the value of the signatureAlgorithm property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSignatureAlgorithm(String value) {
        this.signatureAlgorithm = value;
    }

    /**
     * Gets the value of the cipheringAlgorithm property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCipheringAlgorithm() {
        return cipheringAlgorithm;
    }

    /**
     * Sets the value of the cipheringAlgorithm property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCipheringAlgorithm(String value) {
        this.cipheringAlgorithm = value;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof CardProfile)) {
            return false;
        }
        final CardProfile that = (CardProfile) o;
        return Objects.equals(name, that.name) &&
            transportProtocol == that.transportProtocol &&
            Objects.equals(kic, that.kic) &&
            Objects.equals(kid, that.kid) &&
            Objects.equals(spi, that.spi) &&
            Arrays.equals(tar, that.tar) &&
            Objects.equals(signatureAlgorithm, that.signatureAlgorithm) &&
            Objects.equals(cipheringAlgorithm, that.cipheringAlgorithm);
    }

    @Override
    public int hashCode() {
        int result = Objects.hash(name, transportProtocol, kic, kid, spi, signatureAlgorithm, cipheringAlgorithm);
        result = 31 * result + Arrays.hashCode(tar);
        return result;
    }

    @Override
    public String toString()
    {
        StringBuilder builder = new StringBuilder();
        builder.append("CardProfile [name=");
        builder.append(name);
        builder.append(", transportProtocol=");
        builder.append(transportProtocol);
        builder.append(", kic=");
        builder.append(kic);
        builder.append(", kid=");
        builder.append(kid);
        builder.append(", spi=");
        builder.append(spi);
        builder.append(", tar=");
        builder.append(Util.toHexString(tar));
        builder.append(", signatureAlgorithm=");
        builder.append(signatureAlgorithm);
        builder.append(", cipheringAlgorithm=");
        builder.append(cipheringAlgorithm);
        builder.append("]");
        return builder.toString();
    }
}
