//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.04.01 at 10:04:03 PM CEST 
//


package org.opentelecoms.gsm0348.api.model;

import java.util.Objects;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import org.opentelecoms.gsm0348.api.Util;


/**
 * <p>Java class for CommandPacket complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CommandPacket"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{org.opentelecoms.gsm0348}Packet"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="Header" type="{org.opentelecoms.gsm0348}CommandPacketHeader"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CommandPacket", propOrder = {
    "header"
})
public class CommandPacket
    extends Packet
{

    @XmlElement(name = "Header", required = true)
    protected CommandPacketHeader header;

    /**
     * Gets the value of the header property.
     * 
     * @return
     *     possible object is
     *     {@link CommandPacketHeader }
     *     
     */
    public CommandPacketHeader getHeader() {
        return header;
    }

    /**
     * Sets the value of the header property.
     * 
     * @param value
     *     allowed object is
     *     {@link CommandPacketHeader }
     *     
     */
    public void setHeader(CommandPacketHeader value) {
        this.header = value;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof CommandPacket)) {
            return false;
        }
        final CommandPacket that = (CommandPacket) o;
        return Objects.equals(header, that.header);
    }

    @Override
    public int hashCode() {
        return Objects.hash(header);
    }

    @Override
    public String toString()
    {
        StringBuilder builder = new StringBuilder();
        builder.append("CommandPacket [header=");
        builder.append(header);
        builder.append(", data=");
        builder.append(Util.toHexString(data));
        builder.append("]");
        return builder.toString();
    }

}
