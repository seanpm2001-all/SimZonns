//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.04.01 at 10:04:03 PM CEST 
//


package org.opentelecoms.gsm0348.api.model;

import java.util.Arrays;
import java.util.Objects;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.HexBinaryAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for SecurityHeader complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SecurityHeader"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{org.opentelecoms.gsm0348}PacketHeader"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="TAR" type="{org.opentelecoms.gsm0348}TAR"/&gt;
 *         &lt;element name="PaddingCounter" type="{http://www.w3.org/2001/XMLSchema}byte"/&gt;
 *         &lt;element name="Security" type="{org.opentelecoms.gsm0348}Security" minOccurs="0"/&gt;
 *         &lt;element name="Counter" type="{org.opentelecoms.gsm0348}Counter"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SecurityHeader", propOrder = {
    "tar",
    "paddingCounter",
    "security",
    "counter"
})
@XmlSeeAlso({
    CommandPacketHeader.class,
    ResponsePacketHeader.class
})
public class SecurityHeader
    extends PacketHeader
{

    @XmlElement(name = "TAR", required = true, type = String.class)
    @XmlJavaTypeAdapter(HexBinaryAdapter.class)
    @XmlSchemaType(name = "hexBinary")
    protected byte[] tar;
    @XmlElement(name = "PaddingCounter")
    protected byte paddingCounter;
    @XmlElement(name = "Security", type = String.class)
    @XmlJavaTypeAdapter(HexBinaryAdapter.class)
    @XmlSchemaType(name = "hexBinary")
    protected byte[] security;
    @XmlElement(name = "Counter", required = true, type = String.class)
    @XmlJavaTypeAdapter(HexBinaryAdapter.class)
    @XmlSchemaType(name = "hexBinary")
    protected byte[] counter;

    /**
     * Gets the value of the tar property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public byte[] getTAR() {
        return tar;
    }

    /**
     * Sets the value of the tar property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTAR(byte[] value) {
        this.tar = value;
    }

    /**
     * Gets the value of the paddingCounter property.
     * 
     */
    public byte getPaddingCounter() {
        return paddingCounter;
    }

    /**
     * Sets the value of the paddingCounter property.
     * 
     */
    public void setPaddingCounter(byte value) {
        this.paddingCounter = value;
    }

    /**
     * Gets the value of the security property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public byte[] getSecurity() {
        return security;
    }

    /**
     * Sets the value of the security property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSecurity(byte[] value) {
        this.security = value;
    }

    /**
     * Gets the value of the counter property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public byte[] getCounter() {
        return counter;
    }

    /**
     * Sets the value of the counter property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCounter(byte[] value) {
        this.counter = value;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof SecurityHeader)) {
            return false;
        }
        final SecurityHeader that = (SecurityHeader) o;
        return paddingCounter == that.paddingCounter &&
            Arrays.equals(tar, that.tar) &&
            Arrays.equals(security, that.security) &&
            Arrays.equals(counter, that.counter);
    }

    @Override
    public int hashCode() {
        int result = Objects.hash(paddingCounter);
        result = 31 * result + Arrays.hashCode(tar);
        result = 31 * result + Arrays.hashCode(security);
        result = 31 * result + Arrays.hashCode(counter);
        return result;
    }

    @Override
    public String toString()
    {
        StringBuilder builder = new StringBuilder();
        builder.append("SecurityHeader [tar=");
        builder.append(Arrays.toString(tar));
        builder.append(", paddingCounter=");
        builder.append(paddingCounter);
        builder.append(", security=");
        builder.append(Arrays.toString(security));
        builder.append(", counter=");
        builder.append(Arrays.toString(counter));
        builder.append("]");
        return builder.toString();
    }
}
